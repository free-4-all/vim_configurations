Steps:

Gather/build dependencies
0.) Build ccls (if it's not already installed. Tbricks repo seems to have it included in it's toolchain, so if it's checked out, one can add this to PATH instead...)

1.) Install plug.vim (to manage plugins)
2.) Install coc.nvim (for code completion, using plug)
    -> DEPENDENCY: this requires >= vim 8.1
3.) Install BEAR (Build EAR, listens to compilation and generates the compilation database necessary for code completion)
    -> DEPENDENCY: this requires >= python 2.7 (but must be version 2, not version 3)
    -> DEPENDENCY: this requires cmake >= 2.x

===================================
After we have installed coc.nvim, we need to make some configuration updates in order to take advantage of the ccls:

:CocConfig (in vim)
{
    "languageserver": {
        "ccls": {
            "command": "ccls",
            "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"],
            "rootPatterns": [".ccls", "compile_commands.json", ".vim/", ".git/", ".hg/"],
            "initializationOptions": {
                "cache": {
                    "directory": ".ccls-cache"
                }   
            }   
        }   
    }   
}

===================================

basically, this tells coc that we're using ccls for cpp completion


Now, basic cpp completion should work at this point. We need to get & build BEAR:

	-clone repo from 
	-export BEAR_SOURCE_DIR=/path/to/bear

cd to an install directory (mkdir ~/.bear; cd ~/.bear)
cmake $BEAR_INSTALL_DIR
sudo make 
sudo make install
sudo make check
sudo make package

at this point, bear will now be in /usr/local/bin/

A few GOTCHAS:
Trying to run bear for the first time, one might run into some issues...
1.) maybe the python version is not correct on your system... for example, I had python 2.6.6 installed, but dependency is 2.7+;
	if you fail here too, you will see some sort of syntax error.
	you'll need to download 2.7 sources and install them (ideally into /usr/local/bin) and update PATH if necessary

2.) Maybe you don't have necessary permissions for the library file (you'll get an error like: 'ld.so: A object from LD_PRELOAD cannot be preloaded')
	we need to have a quick look at the permissions for /usr/local/lib64/bear/libear.so
	chmod -r 755 /usr/local/lib64/ should do the trick.

(You can potentially skip over this step and go right on to using bear to intercept the compilation; however, you might run into an issue where the linker complains) 

if you have a wrapper script to call make and compile your apps, then you should probably change the script to prefix the call to 'bear ' before gmake, e.g.:

'bear gmake $target $system $sdk $srcroot'

===================================

Setup at this point should be complete; Compile app before you can actually use completion and navigation.
